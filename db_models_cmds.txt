from flask import Flask
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'
db = SQLAlchemy(app)


class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)

    def __repr__(self):
        return '<User %r>' % self.username

from yourapplication import db
db.create_all()

from yourapplication import User
admin = User(username='admin', email='admin@example.com')
guest = User(username='guest', email='guest@example.com')

db.session.add(admin)
db.session.add(guest)
db.session.commit()

class Foo(db.Model):
    # ...
    def __init__(**kwargs):
        super(Foo, self).__init__(**kwargs)
        # do custom stuff


class Foo(db.Model):
    # ...
    def __init__(**kwargs):
        super(Foo, self).__init__(**kwargs)
        # do custom stuff


app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test1.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)



from flask import Flask
from flask_sqlalchemy import SQLAlchemy

from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test1.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

#__tablename__  = 'sppres'

class Snaps(db.Model):
   id = db.Column(db.Integer, primary_key=True)
   version_id = db.Column(db.String(40), unique=True, nullable=False)
   date_added = db.Column(db.DateTime, nullable=False,
        default=datetime.utcnow)

   dp = db.relationship('DependentProduct', lazy='select', backref=db.backref('snaps', lazy='joined'))


   def __repr__(self):
      return '<Snaps %r>' % self.version_id


class DependentProduct(db.Model):
   id = db.Column(db.Integer, primary_key=True)
   version_id = db.Column(db.String(40), nullable=False)
   version = db.Column(db.String(40), nullable=False)

   dp_id = db.Column(db.Integer, db.ForeignKey('snaps.id'),
        nullable=False)

   def __repr__(self):
      return '<DependentProduct %r>' % self.version_id

dp.version_id, dp.version, dp.product_id)

template for SPP with total of 4 dependent product not bundle product. There is different between the two.
============================================================================================================

{
	"current_spp_version_id": {
		"spp_version": {
			"1st_spp_dependent_product_version_id": ["1st_spp_dependent_product_version", "1st_spp_dependent_product_id"],
			"2st_spp_dependent_product_version_id": ["2st_spp_dependent_product_version", "2st_spp_dependent_product_id"],
			"3st_spp_dependent_product_version_id": ["3st_spp_dependent_product_version", "3st_spp_dependent_product_id"],
			"4st_spp_dependent_product_version_id": ["4st_spp_dependent_product_version", "4st_spp_dependent_product_id"]
		}
	}
}

#Valid Json format
=================
{
	"current_spp_version_id": {
		"pq4cd16e9a5448179d7edf77f373605c": {
			"bb4cd16e9a5448179d7edf77f373605c": ["8.2.0.0", "50468130cf984d1a95405af574bc45ba"],
			"7dc5df7c0dac4aa3a7fe03c84e87ece5": ["8.3.0.0", "bdb025868db847aba45cfe5a0adc7bab"],
      "7dc5df7c0dac4aa3a7fe03c84e87ece7": ["9.3.0.0", "bdb025868db847aba45cfe5a0adc7bac"]
      "7dc5df7c0dac4aa3a7fe03c84e87ece9": ["1.3.0.0", "bdb025868db847aba45cfe5a0adc7bad"]
      "7dc5df7c0dac4aa3a7fe03c84e87ece1": ["2.3.0.0", "bdb025868db847aba45cfe5a0adc7bae"]
      "7dc5df7c0dac4aa3a7fe03c84e87ece3": ["3.3.0.0", "bdb025868db847aba45cfe5a0adc7baf"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecd2": ["4.3.0.0", "bdb025868db847aba45cfe5a0adc7bag"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecd4": ["5.3.0.0", "bdb025868db847aba45cfe5a0adc7bah"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecd6": ["6.3.0.0", "bdb025868db847aba45cfe5a0adc7bai"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecd8": ["7.3.0.0", "bdb025868db847aba45cfe5a0adc7baj"]
      "bb4cd16e9a5448179d7edf77f37360d0": ["8.4.0.0", "50468130cf984d1a95405af574bc45bk"],
			"7dc5df7c0dac4aa3a7fe03c84e87ecc1": ["8.5.0.0", "bdb025868db847aba45cfe5a0adc7bal"],
      "7dc5df7c0dac4aa3a7fe03c84e87ecc2": ["9.6.0.0", "bdb025868db847aba45cfe5a0adc7bam"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc3": ["9.7.0.0", "bdb025868db847aba45cfe5a0adc7ban"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc4": ["9.8.0.0", "bdb025868db847aba45cfe5a0adc7bao"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc5": ["9.9.0.0", "bdb025868db847aba45cfe5a0adc7bap"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc6": ["6.1.0.0", "bdb025868db847aba45cfe5a0adc7baq"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc7": ["9.3.0.0", "bdb025868db847aba45cfe5a0adc7bar"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc8": ["9.3.0.0", "bdb025868db847aba45cfe5a0adc7bas"]
      "7dc5df7c0dac4aa3a7fe03c84e87ecc9": ["9.3.0.0", "bdb025868db847aba45cfe5a0adc7bat"]
		}
	}
}



from sppres import dbdp
db.create_all()
from sppres import Snaps, DependentProduct
mylist = []
first=DependentProduct(product_id="50468130cf984d1a95405af574bc45b6", version_id="bb4cd16e9a5448179d7edf77f373605c", version="8.2.0.0")
db.session.add(first)
mylist.append(first)
second=DependentProduct(product_id="bdb025868db847aba45cfe5a0adc7bab", version_id="7dc5df7c0dac4aa3a7fe03c84e87ece5",  version="8.3.0.0")
db.session.add(second)
mylist.append(second)
sp = Snaps(version_id="pq4cd16e9a5448179d7edf77f373605c", dp=mylist)
db.session.commit()

>>> sp.id
1
>>> sp.dp
[<DependentProduct 'bb4cd16e9a5448179d7edf77f373605c'>, <DependentProduct '7dc5df7c0dac4aa3a7fe03c84e87ece5'>]
>>> sp.dp[0].version
'8.2.0.0'
>>> sp.dp[0].dp_id
1
>>> sp.dp[1].dp_id
1
>>> sp.dp[1].id
2
>>> sp.query.all()
[<Snaps 'pq4cd16e9a5448179d7edf77f373605c'>]
>>> sp.query.filter_by(version_id='pq4cd16e9a5448179d7edf77f373605c')
<flask_sqlalchemy.BaseQuery object at 0x7fd9d173e9b0>
>>> sp.query.filter_by(version_id='pq4cd16e9a5448179d7edf77f373605c').first()
<Snaps 'pq4cd16e9a5448179d7edf77f373605c'>
>>> sp.query.filter_by(version_id='pq4cd16e9a5448179d7edf77f373605c').first()
<Snaps 'pq4cd16e9a5448179d7edf77f373605c'>
>>> sp.query.filter_by(version_id='pq4cd16e9a5448179d7edf77f373605c').first().id
1


db.drop_all()

   def get(self, vid):
       item = Snaps.find_by_spp_version(vid)
       if item:
           return item.json()

       return {'message': 'Item not found'}, 404
